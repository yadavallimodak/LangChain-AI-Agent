name: Build and deploy a container to an Azure Web App



env:

  AZURE_WEBAPP_NAME: agent-pattern-recommender  # set this to the name of your Azure Web App



on:

  push:

    branches: [ "main" ]

  workflow_dispatch:



jobs:

  build:

    runs-on: ubuntu-latest

    outputs:

          tag_info_output: ${{ steps.tag_info_out.outputs.TAG_INFO }}

    defaults:

      run:

        shell: bash  

    steps:

      - name: Checkout Project

        uses: actions/checkout@v3

        with:

          fetch-depth: "0"

      - name : Taginfo

        run: |

           echo "::set-output name=TAG_INFO::$(echo $GITHUB_SHA | cut -c -7)"

        id: tag_info_out



      - name: Set up Docker Buildx

        uses: docker/setup-buildx-action@v1

       

      - name: Docker images self hosted - PVC

        run: |

          docker image ls ${{ env.AZURE_WEBAPP_NAME }}

          cd /tmp

          ls -lash

          df -h

         

      - name: Docker Login

        uses: docker/login-action@v2.0.0

        with:

          registry: ghcr.io

          username: ${{ github.actor }}

          password: ${{ secrets.GITHUB_TOKEN }}



      - name: 'Build image'

        run: |

          docker build --no-cache --file ./Dockerfile . -t ghcr.io/kpmg-us/${{ env.AZURE_WEBAPP_NAME }}:${{ steps.tag_info_out.outputs.TAG_INFO }}

       

      - name: 'Push image'

        run: |

          docker push ghcr.io/kpmg-us/${{ env.AZURE_WEBAPP_NAME }}:${{ steps.tag_info_out.outputs.TAG_INFO }}

         

      - name: Cleaner

        run: |

          docker rmi -f $(docker images | grep agent-pattern-recommender | awk '{print $3}')

          df -h

          password: ${{ secrets.GHCR_PAT }}



      - name: 'Build image'

        run: |

          docker build --no-cache --file ./Dockerfile . -t ghcr.io/kpmg-us/${{ env.AZURE_WEBAPP_NAME }}:${{ steps.tag_info_out.outputs.TAG_INFO }}

       

      - name: 'Push image'

        run: |

          docker push ghcr.io/kpmg-us/${{ env.AZURE_WEBAPP_NAME }}:${{ steps.tag_info_out.outputs.TAG_INFO }}

         

      - name: Cleaner

        run: |

          docker rmi -f $(docker images | grep agent-pattern-recommender | awk '{print $3}')

          df -h



  deploy:

    permissions:

      contents: none

    runs-on: ubuntu-latest

    needs: build

    environment:

      name: 'Development'

      # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}



    steps:

      - name: Lowercase the repo name and username

        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Print tag info

        run: echo "TAG_INFO=${{ needs.build.outputs.tag_info_output }}"



      - name: Deploy to Azure Web App

        id: deploy-to-webapp

        uses: azure/webapps-deploy@v2

        with:

          app-name: ${{ env.AZURE_WEBAPP_NAME }}

          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

          images: 'ghcr.io/kpmg-us/${{ env.AZURE_WEBAPP_NAME }}:${{ needs.build.outputs.tag_info_output }}'
